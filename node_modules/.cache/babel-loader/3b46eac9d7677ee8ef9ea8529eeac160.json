{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { loginUser } from \"../../services/userService\";\nexport const USER_LOGIN = 'USER_LOGIN';\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN';\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nconst handleLoginRedux = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: FETCH_USER_LOGIN\n    });\n    let res = await loginUser(email, password);\n    if (res && res.token) {\n      dispatch({\n        type: FETCH_USER_SUCCESS,\n        data: {\n          email,\n          token: res.token\n        }\n      });\n      toast.success(\"Login successful!\");\n    } else {\n      if (res && res.status === 400) {\n        toast.error(res.data.error);\n      }\n      dispatch({\n        type: FETCH_USER_ERROR\n      });\n    }\n  };\n};","map":{"version":3,"names":["toast","loginUser","USER_LOGIN","FETCH_USER_LOGIN","FETCH_USER_ERROR","FETCH_USER_SUCCESS","USER_LOGOUT","handleLoginRedux","email","password","dispatch","getState","type","res","token","data","success","status","error"],"sources":["C:/Users/Administrator/Desktop/Workspace/js-lesson/React-pratice/src/redux/actions/userAction.js"],"sourcesContent":["import { toast } from \"react-toastify\"\r\nimport { loginUser } from \"../../services/userService\"\r\n\r\nexport const USER_LOGIN = 'USER_LOGIN'\r\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN'\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const USER_LOGOUT = 'USER_LOGOUT' \r\n\r\nconst handleLoginRedux = ( email, password ) => {\r\n    return async ( dispatch, getState ) => {\r\n        dispatch({ type: FETCH_USER_LOGIN })\r\n\r\n        let res = await loginUser(email, password)\r\n\r\n        if (res && res.token){\r\n            dispatch({ \r\n                type: FETCH_USER_SUCCESS,\r\n                data: { email, token: res.token }\r\n            })\r\n            \r\n            toast.success(\"Login successful!\")\r\n        } else {\r\n            if (res && res.status === 400){\r\n                toast.error(res.data.error)\r\n            }\r\n\r\n            dispatch({ \r\n                type: FETCH_USER_ERROR,\r\n                \r\n            })\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,WAAW,GAAG,aAAa;AAExC,MAAMC,gBAAgB,GAAGA,CAAEC,KAAK,EAAEC,QAAQ,KAAM;EAC5C,OAAO,OAAQC,QAAQ,EAAEC,QAAQ,KAAM;IACnCD,QAAQ,CAAC;MAAEE,IAAI,EAAET;IAAiB,CAAC,CAAC;IAEpC,IAAIU,GAAG,GAAG,MAAMZ,SAAS,CAACO,KAAK,EAAEC,QAAQ,CAAC;IAE1C,IAAII,GAAG,IAAIA,GAAG,CAACC,KAAK,EAAC;MACjBJ,QAAQ,CAAC;QACLE,IAAI,EAAEP,kBAAkB;QACxBU,IAAI,EAAE;UAAEP,KAAK;UAAEM,KAAK,EAAED,GAAG,CAACC;QAAM;MACpC,CAAC,CAAC;MAEFd,KAAK,CAACgB,OAAO,CAAC,mBAAmB,CAAC;IACtC,CAAC,MAAM;MACH,IAAIH,GAAG,IAAIA,GAAG,CAACI,MAAM,KAAK,GAAG,EAAC;QAC1BjB,KAAK,CAACkB,KAAK,CAACL,GAAG,CAACE,IAAI,CAACG,KAAK,CAAC;MAC/B;MAEAR,QAAQ,CAAC;QACLE,IAAI,EAAER;MAEV,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}