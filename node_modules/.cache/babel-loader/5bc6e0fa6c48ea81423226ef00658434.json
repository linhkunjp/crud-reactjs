{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { loginUser } from \"../../services/userService\";\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN';\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR';\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const handleLoginRedux = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: FETCH_USER_LOGIN\n    });\n    let res = await loginUser(email, password);\n    if (res && res.token) {\n      localStorage.setItem('token', res.token);\n      localStorage.setItem('email', email);\n      dispatch({\n        type: FETCH_USER_SUCCESS,\n        data: {\n          email,\n          token: res.token\n        }\n      });\n      toast.success(\"Login successful!\");\n    } else {\n      if (res && res.status === 400) {\n        toast.error(res.data.error);\n      }\n      dispatch({\n        type: FETCH_USER_ERROR\n      });\n    }\n  };\n};\nexport const handleLogoutRedux = () => {\n  return (dispatch, getState) => {\n    dispatch({\n      type: USER_LOGOUT\n    });\n  };\n};","map":{"version":3,"names":["toast","loginUser","FETCH_USER_LOGIN","FETCH_USER_ERROR","FETCH_USER_SUCCESS","USER_LOGOUT","handleLoginRedux","email","password","dispatch","getState","type","res","token","localStorage","setItem","data","success","status","error","handleLogoutRedux"],"sources":["C:/Users/Administrator/Desktop/Workspace/js-lesson/React-pratice/src/redux/actions/userAction.js"],"sourcesContent":["import { toast } from \"react-toastify\"\r\nimport { loginUser } from \"../../services/userService\"\r\n\r\nexport const FETCH_USER_LOGIN = 'FETCH_USER_LOGIN'\r\nexport const FETCH_USER_ERROR = 'FETCH_USER_ERROR'\r\nexport const FETCH_USER_SUCCESS = 'FETCH_USER_SUCCESS'\r\nexport const USER_LOGOUT = 'USER_LOGOUT' \r\n\r\nexport const handleLoginRedux = ( email, password ) => {\r\n    return async ( dispatch, getState ) => {\r\n        dispatch({ type: FETCH_USER_LOGIN })\r\n\r\n        let res = await loginUser(email, password)\r\n\r\n        if (res && res.token){\r\n            localStorage.setItem('token', res.token)\r\n            localStorage.setItem('email', email)\r\n\r\n            dispatch({ \r\n                type: FETCH_USER_SUCCESS,\r\n                data: { email, token: res.token }\r\n            })\r\n            \r\n            toast.success(\"Login successful!\")\r\n        } else {\r\n            if (res && res.status === 400){\r\n                toast.error(res.data.error)\r\n            }\r\n\r\n            dispatch({ \r\n                type: FETCH_USER_ERROR,\r\n                \r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const handleLogoutRedux = () => {\r\n    return ( dispatch, getState ) => {\r\n        dispatch({\r\n            type: USER_LOGOUT\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;AACtC,SAASC,SAAS,QAAQ,4BAA4B;AAEtD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,gBAAgB,GAAG,kBAAkB;AAClD,OAAO,MAAMC,kBAAkB,GAAG,oBAAoB;AACtD,OAAO,MAAMC,WAAW,GAAG,aAAa;AAExC,OAAO,MAAMC,gBAAgB,GAAGA,CAAEC,KAAK,EAAEC,QAAQ,KAAM;EACnD,OAAO,OAAQC,QAAQ,EAAEC,QAAQ,KAAM;IACnCD,QAAQ,CAAC;MAAEE,IAAI,EAAET;IAAiB,CAAC,CAAC;IAEpC,IAAIU,GAAG,GAAG,MAAMX,SAAS,CAACM,KAAK,EAAEC,QAAQ,CAAC;IAE1C,IAAII,GAAG,IAAIA,GAAG,CAACC,KAAK,EAAC;MACjBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACC,KAAK,CAAC;MACxCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;MAEpCE,QAAQ,CAAC;QACLE,IAAI,EAAEP,kBAAkB;QACxBY,IAAI,EAAE;UAAET,KAAK;UAAEM,KAAK,EAAED,GAAG,CAACC;QAAM;MACpC,CAAC,CAAC;MAEFb,KAAK,CAACiB,OAAO,CAAC,mBAAmB,CAAC;IACtC,CAAC,MAAM;MACH,IAAIL,GAAG,IAAIA,GAAG,CAACM,MAAM,KAAK,GAAG,EAAC;QAC1BlB,KAAK,CAACmB,KAAK,CAACP,GAAG,CAACI,IAAI,CAACG,KAAK,CAAC;MAC/B;MAEAV,QAAQ,CAAC;QACLE,IAAI,EAAER;MAEV,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMiB,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAEX,QAAQ,EAAEC,QAAQ,KAAM;IAC7BD,QAAQ,CAAC;MACLE,IAAI,EAAEN;IACV,CAAC,CAAC;EACN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}